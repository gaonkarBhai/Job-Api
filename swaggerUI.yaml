openapi: 3.0.0
info:
  title: JOB-API
  contact: {}
  version: '1.0'
servers:
- url: https://job-api-brown.vercel.app/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: register
      operationId: register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/registerrequest'
              - example:
                  name: Manoj M V
                  email: manojISchomu420@gmail.com
                  password: manugotHacket
            example:
              name: Manoj M V
              email: manojISchomu420@gmail.com
              password: manugotHacket
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/loginrequest'
              - example:
                  email: manojISchomu420@gmail.com
                  password: manugotHacket
            example:
              email: manojISchomu420@gmail.com
              password: manugotHacket
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /job:
    get:
      tags:
      - Job
      summary: getAllJobs
      operationId: getAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    post:
      tags:
      - Job
      summary: creteJob
      operationId: creteJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/creteJobRequest'
              - example:
                  company: ChomuChai's
                  position: CEO
                  status: pending
            example:
              company: ChomuChai's
              position: CEO
              status: pending
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /job/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
      - Job
      summary: getSingleJob
      operationId: getSingleJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    patch:
      tags:
      - Job
      summary: updateJob
      operationId: updateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/updateJobRequest'
              - example:
                  position: rejected
            example:
              position: rejected
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
      - Job
      summary: deleteJob
      operationId: deleteJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    registerrequest:
      title: registerrequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Manoj M V
        email: manojISchomu420@gmail.com
        password: manugotHacket
    loginrequest:
      title: loginrequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: manojISchomu420@gmail.com
        password: manugotHacket
    creteJobRequest:
      title: creteJobRequest
      required:
      - company
      - position
      - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        company: ChomuChai's
        position: CEO
        status: pending
    updateJobRequest:
      title: updateJobRequest
      required:
      - position
      type: object
      properties:
        position:
          type: string
      example:
        position: rejected
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
- httpBearer: []
tags:
- name: Auth
- name: Job